import tkinter as tk
from auth import register_user, login_user
from trading import show_trading_screen, start_price_thread
from profile import show_profile_screen, BTN_TEXT_COLOR
from db import initialize_db

# üé® –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∏–ª—è
BG_COLOR = "#222222"
FG_COLOR = "white"
BTN_COLOR = "#444444"
BTN_HOVER = "#666666"

initialize_db()

root = tk.Tk()
root.title("–ö—Ä–∏–ø—Ç–æ–±–∏—Ä–∂–∞ –¥–ª—è –¥–µ—Ç–µ–π")
root.geometry("1920x1080")
root.attributes("-fullscreen", True)
root.configure(bg=BG_COLOR)

root_frame = tk.Frame(root, bg=BG_COLOR)
root_frame.pack(fill="both", expand=True)

def create_styled_button(parent, text, command):
    """–°–æ–∑–¥–∞–µ—Ç —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É."""
    btn = tk.Button(parent, text=text, command=command, font=("Arial", 12, "bold"),
                    fg=BTN_TEXT_COLOR, bg=BTN_COLOR, activebackground=BTN_HOVER,
                    relief="flat", bd=2, padx=10, pady=5, cursor="hand2")
    btn.pack(pady=5)
    return btn

def show_login_screen():
    """–≠–∫—Ä–∞–Ω –≤—Ö–æ–¥–∞"""
    for widget in root_frame.winfo_children():
        widget.destroy()

    tk.Label(root_frame, text="–í—Ö–æ–¥", font=("Arial", 16, "bold"), fg=FG_COLOR, bg=BG_COLOR).pack()

    tk.Label(root_frame, text="Email:", font=("Arial", 12), fg=FG_COLOR, bg=BG_COLOR).pack()
    email_entry = tk.Entry(root_frame, font=("Arial", 12), bg="#333333", fg=FG_COLOR)
    email_entry.pack()

    tk.Label(root_frame, text="–ü–∞—Ä–æ–ª—å:", font=("Arial", 12), fg=FG_COLOR, bg=BG_COLOR).pack()
    password_entry = tk.Entry(root_frame, show="*", font=("Arial", 12), bg="#333333", fg=FG_COLOR)
    password_entry.pack()

    def login():
        user_id = login_user(email_entry.get(), password_entry.get())
        if user_id:
            show_main_screen(user_id)

    create_styled_button(root_frame, "–í–æ–π—Ç–∏", login)
    create_styled_button(root_frame, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", show_register_screen)

def show_register_screen():
    """–≠–∫—Ä–∞–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    for widget in root_frame.winfo_children():
        widget.destroy()

    tk.Label(root_frame, text="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", font=("Arial", 16, "bold"), fg=FG_COLOR, bg=BG_COLOR).pack()

    tk.Label(root_frame, text="–ò–º—è:", font=("Arial", 12), fg=FG_COLOR, bg=BG_COLOR).pack()
    name_entry = tk.Entry(root_frame, font=("Arial", 12), bg="#333333", fg=FG_COLOR)
    name_entry.pack()

    tk.Label(root_frame, text="Email:", font=("Arial", 12), fg=FG_COLOR, bg=BG_COLOR).pack()
    email_entry = tk.Entry(root_frame, font=("Arial", 12), bg="#333333", fg=FG_COLOR)
    email_entry.pack()

    tk.Label(root_frame, text="–ü–∞—Ä–æ–ª—å:", font=("Arial", 12), fg=FG_COLOR, bg=BG_COLOR).pack()
    password_entry = tk.Entry(root_frame, show="*", font=("Arial", 12), bg="#333333", fg=FG_COLOR)
    password_entry.pack()

    def register():
        user_id = register_user(name_entry.get(), email_entry.get(), password_entry.get())
        if user_id:
            show_main_screen(user_id)

    create_styled_button(root_frame, "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", register)
    create_styled_button(root_frame, "–ù–∞–∑–∞–¥", show_login_screen)

def show_main_screen(user_id):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    for widget in root_frame.winfo_children():
        widget.destroy()

    tk.Label(root_frame, text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", font=("Arial", 16, "bold"), fg=FG_COLOR, bg=BG_COLOR).pack()

    create_styled_button(root_frame, "–ü—Ä–æ—Ñ–∏–ª—å", lambda: show_profile_screen(user_id, root_frame, show_main_screen))

    for crypto in ["Bitcoin", "Ethereum", "Dogecoin"]:
        create_styled_button(root_frame, crypto, lambda c=crypto: show_trading_screen(user_id, c, root_frame, show_main_screen))

# –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
show_login_screen()

start_price_thread()
root.mainloop()