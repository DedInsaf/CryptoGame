import tkinter as tk
import sqlite3

# üé® –ù–æ–≤—ã–π —Å—Ç–∏–ª—å
BG_COLOR = "#222222"   # –¢—ë–º–Ω—ã–π —Ñ–æ–Ω
TEXT_COLOR = "#FFFFFF"  # –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç
BTN_COLOR = "#FF4500"   # –û—Ä–∞–Ω–∂–µ–≤–æ-–∫—Ä–∞—Å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
BTN_HOVER = "#CC3700"   # –¢—ë–º–Ω—ã–π –æ—Ç—Ç–µ–Ω–æ–∫ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
BTN_TEXT_COLOR = "#222222"  # –¢—ë–º–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–æ–∫

conn = sqlite3.connect("users.db", check_same_thread=False)
cursor = conn.cursor()

def show_profile_screen(user_id, root_frame, show_main_screen):
    """–≠–∫—Ä–∞–Ω –ø—Ä–æ—Ñ–∏–ª—è —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –æ—à–∏–±–∫–∏"""
    for widget in root_frame.winfo_children():
        widget.destroy()

    root_frame.configure(bg=BG_COLOR)

    tk.Label(root_frame, text="–ü—Ä–æ—Ñ–∏–ª—å", font=("Arial", 16, "bold"), fg=TEXT_COLOR, bg=BG_COLOR).pack()

    balance_label = tk.Label(root_frame, text="–ë–∞–ª–∞–Ω—Å: ...", font=("Arial", 14), fg=TEXT_COLOR, bg=BG_COLOR)
    balance_label.pack()

    portfolio_label = tk.Label(root_frame, text="–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞:", font=("Arial", 14), fg=TEXT_COLOR, bg=BG_COLOR)
    portfolio_label.pack()

    updating = True  # –§–ª–∞–≥, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ

    def update_profile():
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–ª–∞–Ω—Å –∏ –∫—Ä–∏–ø—Ç—É"""
        if not updating:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ
            return

        if balance_label.winfo_exists():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –≤–∏–¥–∂–µ—Ç –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
            cursor.execute("SELECT balance FROM users WHERE id=?", (user_id,))
            balance = cursor.fetchone()[0]
            balance_label.config(text=f"–ë–∞–ª–∞–Ω—Å: {balance:.2f} $")

            cursor.execute("SELECT crypto, amount FROM portfolio WHERE user_id=?", (user_id,))
            portfolio = cursor.fetchall()

            portfolio_text = "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞:\n"
            for crypto, amount in portfolio:
                portfolio_text += f"{crypto}: {amount} —à—Ç.\n"

            portfolio_label.config(text=portfolio_text)
            root_frame.after(3000, update_profile)

    update_profile()

    def go_back():
        nonlocal updating
        updating = False  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
        show_main_screen(user_id)

    btn_back = tk.Button(root_frame, text="–ù–∞–∑–∞–¥", command=go_back, font=("Arial", 12, "bold"),
                         fg=BTN_TEXT_COLOR, bg=BTN_COLOR, activebackground=BTN_HOVER,
                         relief="flat", bd=2, padx=10, pady=5, cursor="hand2")
    btn_back.pack(pady=10, fill="x")